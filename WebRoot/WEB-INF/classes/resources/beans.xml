<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd ">
		
 <context:component-scan base-package="com">
		<context:exclude-filter type="annotation" 
		expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 引入外部的属性文件 -->
	<context:property-placeholder location="classpath:/resources/jdbc.properties"/>
	
	<!-- 配置c3p0 连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">        
        <property name="driverClass" value="${jdbc.driverClass}"/>        
        <property name="jdbcUrl" value="${jdbc.url}"/>        
        <property name="user" value="${jdbc.username}"/>        
        <property name="password" value="${jdbc.password}"/>        
    </bean>
     <!-- 配置hibernate 相关属性--> 
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 注入连接池-->
		<property name="dataSource" ref="dataSource"></property>
		<!-- hibernate 的相关属性 -->
		
		<property name="hibernateProperties" >
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.format_sql">false</prop>               
                <!-- 
			                它包含4个属性: 
			    * create : 会根据你的model类来生成表,但是每次运行都会删除上一次的表,重新生成表,哪怕2次没有任何改变 
			    * create-drop : 根据model类生成表,但是sessionFactory一关闭,表就自动删除 
			    * update : 最常用的属性，也根据model类生成表,即使表结构改变了,表中的行仍然存在,不会删除以前的行 
			    * validate : 只会和数据库中的表进行比较,不会创建新表,但是会插入新值 
                 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		
		<!-- hibernate 
		 <property name="packagesToScan">
			<list>
				<value>com.jxust.svsh.entity</value>
			</list>
		</property>映射文件 -->
		
		
	<!-- 配置事务管理器 	-->  
		<property name="mappingResources">
               <list>
                  <value>com/itest/mapper/herder.hbm.xml</value>
                  <value>com/itest/mapper/Interface.hbm.xml</value>
                  <value>com/itest/mapper/value.hbm.xml</value>
                  <value>com/itest/mapper/Person.hbm.xml</value>
                  <value>com/itest/mapper/addyl.hbm.xml</value>
                  <value>com/itest/mapper/addylassert.hbm.xml</value>
                  <value>com/itest/mapper/addylherder.hbm.xml</value>
                  <value>com/itest/mapper/addylvalue.hbm.xml</value>
                  <value>com/itest/mapper/zhu.hbm.xml</value>
                  <value>com/itest/mapper/Testtask.hbm.xml</value>
                  <value>com/itest/mapper/Tast.hbm.xml</value>   
                  <value>com/itest/mapper/cass.hbm.xml</value>
                  <value>com/itest/mapper/JobEntity.hbm.xml</value> 
               </list>
            </property>
    <!-- 配置事务管理器     
    <property name="mappingLocations">   
    <value>classpath:/com/jxust/svsh/entity/*.hbm.xml </value>   
    </property>  -->  	
	</bean>	
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
		
	<!-- 开启事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager"  />



<bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
  <property name="triggers">
   <list>  
   </list>
  </property>
 </bean>
<!--   <bean id="firstQuartz" class="com.quartz.task.FirstQuartz"></bean>  
    <bean id="buildSessionJob" class="org.springframework.scheduling.quartz.JobDetailBean">  
        <property name="jobClass">  
            <value>com.itest.dao.TaskJob
            </value>  
        </property>  
        <property name="jobDataAsMap">  
            <map>  
                <entry key="sessionFactory" value-ref="sessionFactory"></entry>  
                <entry key="firstQuartz" value-ref="firstQuartz"></entry>  
            </map>  
        </property>  
    </bean>  
    <bean id="simpleAutoBuild" class="org.springframework.scheduling.quartz.SimpleTriggerBean">  
        <property name="jobDetail">  
            <ref bean="buildSessionJob" />  
        </property>  
        <property name="repeatInterval">  
            <value>5000</value>  
        </property>  
    </bean>  
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="triggers">  
            <list><ref bean="simpleAutoBuild" /></list>  
        </property>  
    </bean>  
</beans>  --> 
<!--  <bean id="doJob"  class="org.springframework.scheduling.quartz.JobDetailFactoryBean">    
<property name="durability" value="true"></property>  
<property name="jobClass" value="com.itest.dao.TaskJob" />  
<property name="jobDataAsMap">  
    <map>  
       <entry key="contributorJobService" value-ref="contributorJobService"></entry>  
       <entry key="sessionFactory" value-ref="sessionFactory"></entry>  
    </map>  
</property>  
</bean>    

<bean id="cronTriggerPunch" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">    
<property name="jobDetail" ref="doJob" />    
1 hour  
<property name="cronExpression" value="0 0 0/1 * * ?" />    
</bean> 
  
配置调度工厂  
<bean id= "startQuertz" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">    
<property name="triggers">    
    <list>    
        <ref bean="cronTriggerPunch" />    
    </list>    
</property>     
</bean>   -->
 
 
 
 
 
 
 
 
 
<!-- <bean id="firstQuartz" class="com.itest.quartz.HelloWorldJob"></bean>  
    <bean id="buildSessionJob" class="org.springframework.scheduling.quartz.JobDetailBean">  
        <property name="jobClass">  
            <value>com.itest.quartz.HelloWorldJob  
            </value>  
        </property>  
        <property name="jobDataAsMap">  
            <map>  
                <entry key="sessionFactory" value-ref="sessionFactory"></entry>  
                <entry key="firstQuartz" value-ref="firstQuartz"></entry>  
            </map>  
        </property>  
    </bean>  
    <bean id="simpleAutoBuild" class="org.springframework.scheduling.quartz.SimpleTriggerBean">  
        <property name="jobDetail">  
            <ref bean="buildSessionJob" />  
        </property>  
        <property name="repeatInterval">  
            <value>5000</value>  
        </property>  
    </bean>  
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="triggers">  
            <list><ref bean="simpleAutoBuild" /></list>  
        </property>  
    </bean>   -->
	
	
</beans>





